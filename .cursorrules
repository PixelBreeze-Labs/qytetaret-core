Project: Qytetaret Core Backend (API)
Tech Stack: Node.js, MongoDB, TypeScript
Architecture: Clean Architecture

Rules:
- Use TypeScript strict mode
- Follow RESTful API conventions
- Implement proper error handling with custom error classes
- Use dependency injection pattern
- Maintain clear separation between layers (controllers, services, models)
- Write unit tests for business logic
- Document all API endpoints
- Use async/await for asynchronous operations
- Follow MongoDB best practices
- Use proper validation for incoming requests

Naming Conventions:
- Files: kebab-case.ts
- Classes: PascalCase
- Functions/Methods: camelCase
- Constants: UPPER_SNAKE_CASE
- Interfaces: IPascalCase
- Types: TPascalCase

File Organization:
- Group by feature first, then by type
- Keep related files close together
- Maximum file size: 400 lines
- Maximum function size: 30 lines

Code Style:
- Max line length: 80 characters
- Use early returns
- Avoid nested conditionals
- Use meaningful variable names
- Comment complex business logic